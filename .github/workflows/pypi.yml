name: Build, Test, and Publish on Tag

on:
  push:
    tags:
      - 'v*'

jobs:
  build_linux:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ['3.10', '3.11']

    steps:
      - name: Checkout code
        uses: actions/checkout@v2
        with:
          submodules: true  # Ensure submodules are cloned

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip setuptools wheel

      - name: Set version in setup.py
        run: |
          TAG_NAME="${{ github.ref }}"; TAG_NAME=${TAG_NAME#refs/tags/}
          sed -i "s/{{VERSION_PLACEHOLDER}}/${TAG_NAME}/g" setup.py

      - name: Install CMake
        run: |
          sudo apt-get update
          sudo apt-get install -y cmake

      - name: Configure and build project
        run: |
          cmake -S . -B build -DPYTHON_EXECUTABLE=$(which python)
          cmake --build build --config Release

      - name: Build wheel
        run: |
          python setup.py bdist_wheel

      - name: Test the wheel
        run: |
          WHEEL_FILE=$(echo dist/*.whl)
          echo "Found wheel file: $WHEEL_FILE"
          python -m pip install $WHEEL_FILE
          python -m pip list
          python -c "import testpython; print(testpython.greet('NAME'))"

  build_windows:
    runs-on: windows-latest
    strategy:
      matrix:
        python-version: [ '3.10', '3.11' ]

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install dependencies
        run: python -m pip install --upgrade pip setuptools wheel

      - name: Set version in setup.py
        run: |
          $TAG_NAME="${{ github.ref }}"; $TAG_NAME=$TAG_NAME -replace "refs/tags/", ""
          (Get-Content setup.py) -replace '{{VERSION_PLACEHOLDER}}', $TAG_NAME | Set-Content setup.py

      - name: Install Ninja
        run: choco install ninja

      - name: Install MinGW
        run: choco install mingw

      - name: Configure and build project
        run: |
          cmake -S . -B build -G "Ninja" -DCMAKE_C_COMPILER=g++ -DCMAKE_CXX_COMPILER=g++
          cmake --build build --config Release

      - name: Build wheel
        run: python setup.py bdist_wheel

      - name: Test the wheel
        run: |
          $WHEEL_FILE=$(Get-ChildItem -Path dist\*.whl | Select-Object -ExpandProperty FullName)
          echo "Found wheel file: $WHEEL_FILE"
          python -m pip install $WHEEL_FILE
          python -m pip list
          python -c "import testpython; print(testpython.greet('World'))"

      # Optionally, add a step to publish to PyPI or another repository if needed



      #- name: Publish to TestPyPI
      #  if: contains(github.ref, 'v')
      #  uses: pypa/gh-action-pypi-publish@master
      #  with:
      #    repository-url: https://test.pypi.org/legacy/
      #    user: __token__
      #    password: ${{ secrets.TEST_PYPI_API_TOKEN }}
